#!/bin/bash

set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}

BIN_DIR=$(cd $(dirname $0); pwd)
BUILDPACK_DIR=$(dirname $BIN_DIR)

JANET_VERSION=1.9.0
JANET_ARCHIVE_NAME=janet-v$JANET_VERSION-linux
JANET_URL=https://github.com/janet-lang/janet/releases/download/v$JANET_VERSION/$JANET_ARCHIVE_NAME.tar.gz

export LD_LIBRARY_PATH="$BUILD_DIR/vendor/lib/x86_64-linux-gnu:$BUILD_DIR/vendor/lib/i386-linux-gnu:$BUILD_DIR/vendor/lib:\$LD_LIBRARY_PATH"
export LIBRARY_PATH="$BUILD_DIR/vendor/lib/x86_64-linux-gnu:$BUILD_DIR/vendor/lib/i386-linux-gnu:$BUILD_DIR/vendor/lib:\$LIBRARY_PATH"
export INCLUDE_PATH="$BUILD_DIR/vendor/include:$BUILD_DIR/vendor/include/x86_64-linux-gnu:\$INCLUDE_PATH"
export CPATH="\$INCLUDE_PATH"
export CPPPATH="\$INCLUDE_PATH"
export PKG_CONFIG_PATH="$BUILD_DIR/vendor/lib/x86_64-linux-gnu/pkgconfig:$BUILD_DIR/vendor/lib/i386-linux-gnu/pkgconfig:$BUILD_DIR/vendor/lib/pkgconfig:\$PKG_CONFIG_PATH"

echo "##########"
pkg-config libcurl --cflags
pkg-config libcurl --libs

JANET_DIR_NAME=$BUILD_DIR/.janet_bin
export JANET_PATH=$CACHE_DIR/.janet
export JANET_HEADERPATH=$JANET_DIR_NAME
export JANET_LIBPATH=$JANET_DIR_NAME
export JANET_BINPATH=$JANET_DIR_NAME
export PATH=$JANET_DIR_NAME:$PATH

echo "Downloading $JANET_URL"
curl -LJs $JANET_URL | tar xz
mv $JANET_ARCHIVE_NAME $JANET_DIR_NAME

mkdir -p "$JANET_PATH"
# cd $BUILD_DIR && jpm deps --verbose && cd -

echo "Copying Janet files"
cp -r $JANET_PATH $BUILD_DIR/.janet

PROFILE_DIR=.profile.d
mkdir -p $1/$PROFILE_DIR

cat << EOF > $1/$PROFILE_DIR/setup_janet.sh
export PATH=/app/.janet_bin:\$PATH
janet_bin_path=\$(pwd)/.janet_bin
export JANET_HEADERPATH=\$janet_bin_path
export JANET_LIBPATH=\$janet_bin_path
export JANET_BINPATH=\$janet_bin_path
janet_dir=\$(pwd)/.janet
export JANET_PATH=\$janet_dir
export LD_LIBRARY_PATH=/app/vendor/lib:\$LD_LIBRARY_PATH
EOF

cat << EOF > $1/$PROFILE_DIR/setup_joy.sh
echo 'JOY_ENV=production' >> .env
EOF

curl --version
